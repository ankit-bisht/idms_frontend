{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/configuration/config.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/guards/login.guard.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/services/api.service.ts","./src/app/services/common.service.ts","./src/environments/environment.ts","./src/main.ts","./src/shared/directives/content-animate.directive.ts","./src/shared/footer/footer.component.html","./src/shared/footer/footer.component.ts","./src/shared/navbar/navbar.component.html","./src/shared/navbar/navbar.component.ts","./src/shared/sidebar/sidebar.component.html","./src/shared/sidebar/sidebar.component.ts","./src/shared/spinner/spinner.component.html","./src/shared/spinner/spinner.component.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { LoginGuard } from './guards/login.guard';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  {\n    path: 'login', component: LoginComponent,\n    children: [\n      {\n        path: '', component: LoginComponent\n      },\n    ]\n  },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [LoginGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container-scroller\">\n    <app-navbar *ngIf=\"showNavbar\"></app-navbar>\n    <div class=\"container-fluid page-body-wrapper\">\n        <app-sidebar *ngIf=\"showSidebar\"></app-sidebar>\n        <div class=\"main-panel\" [ngClass]=\"{ 'main-panel-only' : !showSidebar }\">\n            <div class=\"content-wrapper\">\n                <app-spinner *ngIf=\"isLoading\"></app-spinner>\n                <div contentAnimate *ngIf=\"!isLoading\" class=\"h-100\">\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n            <app-footer *ngIf=\"showFooter\"></app-footer>\n            <!-- partial -->\n        </div>\n        <!-- main-panel ends -->\n    </div>\n    <!-- page-body-wrapper ends -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, NavigationStart, RouteConfigLoadStart, RouteConfigLoadEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'idms-frontend';\n\n  showSidebar: boolean = true;\n  showNavbar: boolean = true;\n  showFooter: boolean = true;\n  isLoading: boolean;\n\n  constructor(private router: Router) {\n\n    // Removing Sidebar, Navbar, Footer for Documentation, Error and Auth pages\n    router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n        if ((!localStorage.getItem('token'))||(event['url'] == '/')||(event['url'] == '')||(event['url'] == '/login') || (event['url'] == '/register') || (event['url'] == '/error-pages/404') || (event['url'] == '/error-pages/500')) {\n          this.showSidebar = false;\n          this.showNavbar = false;\n          this.showFooter = false;\n          document.querySelector('.main-panel').classList.add('w-100');\n          document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n          document.querySelector('.content-wrapper').classList.remove('auth', 'auth-img-bg',);\n          document.querySelector('.content-wrapper').classList.remove('auth', 'lock-full-bg');\n          if ((event['url'] == '/error-pages/404') || (event['url'] == '/error-pages/500')) {\n            document.querySelector('.content-wrapper').classList.add('p-0');\n          }\n        } else {\n          this.showSidebar = true;\n          this.showNavbar = true;\n          this.showFooter = true;\n          document.querySelector('.main-panel').classList.remove('w-100');\n          document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n          document.querySelector('.content-wrapper').classList.remove('auth', 'auth-img-bg');\n          document.querySelector('.content-wrapper').classList.remove('p-0');\n        }\n      }\n    });\n\n    // Spinner for lazyload modules\n    router.events.forEach((event) => {\n      if (event instanceof RouteConfigLoadStart) {\n        this.isLoading = true;\n      } else if (event instanceof RouteConfigLoadEnd) {\n        this.isLoading = false;\n      }\n    });\n  }\n\n\n\n  ngOnInit() {\n    // Scroll to top after route change\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoginGuard } from './guards/login.guard';\nimport { CommonService } from './services/common.service';\nimport { NavbarComponent } from '../shared/navbar/navbar.component';\nimport { SidebarComponent } from '../shared/sidebar/sidebar.component';\nimport { FooterComponent } from '../shared/footer/footer.component';\nimport { SpinnerComponent } from '../shared/spinner/spinner.component';\nimport { ContentAnimateDirective } from '../shared/directives/content-animate.directive';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApiService } from './services/api.service';\nimport { Configuration } from './configuration/config';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    NavbarComponent,\n    SidebarComponent,\n    FooterComponent,\n    SpinnerComponent,\n    ContentAnimateDirective\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [LoginGuard, CommonService,ApiService,Configuration],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","const PROD_SERVER = 'http://63.141.51.26:81/api/v1/';\n\nexport class Configuration {\n    public baseUrl = PROD_SERVER;\n    public Hmac256Secret = 'abcdefg';\n    public UrlObj = {\n        loginApi: this.baseUrl + \"userLogin\",\n    }\n}\n","<p>LOGGED IN!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../services/common.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n    constructor(private authService: CommonService, private router: Router,\n        @Inject(PLATFORM_ID) private platformId: Object) {\n\n    }\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        if (isPlatformBrowser(this.platformId)) {            \n            if (this.authService.isUserLoggedIn() === false) {\n                this.router.navigate(['/login']);\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n}\n\n","<div class=\"d-flex align-items-center auth px-0\">\n    <div class=\"row w-100 mx-0\">\n        <div class=\"col-lg-4 mx-auto\">\n            <div class=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n                <div class=\"brand-logo\">\n                    <h3><b>IDMS</b></h3>\n                    <!-- <img src=\"assets/images/logo.svg\" alt=\"logo\"> -->\n                </div>\n                <h4>Hello! let's get started</h4>\n                <h6 class=\"font-weight-light\">Sign in to continue.</h6>\n                <form class=\"pt-3\" [formGroup]=\"loginForm\">\n                    <div *ngIf=\"FormError\" class=\"text-danger\">\n                        {{FormError}}\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control form-control-lg\" id=\"exampleInputEmail\"\n                            placeholder=\"Email\" formControlName=\"email\" required>\n\n                        <div *ngIf=\"loginForm.get('email').invalid && (loginForm.get('email').touched)\"\n                            class=\"text-danger\">\n                            <div *ngIf=\"loginForm.get('email').errors.pattern\">\n                                Invalid Email Address.\n                            </div>\n                            <div *ngIf=\"loginForm.get('email').errors.required\">\n                                Email Address is Required.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control form-control-lg\" id=\"exampleInputPassword\"\n                            placeholder=\"Password\" formControlName=\"password\" required>\n\n                        <div *ngIf=\"loginForm.get('password').invalid && (loginForm.get('password').touched)\"\n                            class=\"text-danger\">\n                            <div *ngIf=\"loginForm.get('password').errors.required\">\n                                Password is Required.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"mt-3\">\n                        <button class=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                            (click)=\"login()\" type=\"button\" [disabled]=\"!loginForm.valid\">SIGN IN</button>\n                    </div>\n                    <div class=\"my-2 d-flex justify-content-between align-items-center\">\n                        <div class=\"form-check\">\n                            <label class=\"form-check-label text-muted\">\n                                <input type=\"checkbox\" class=\"form-check-input\">\n                                <i class=\"input-helper\"></i>\n                                Keep me signed in\n                            </label>\n                        </div>\n                        <a href=\"javascript:(void)\" class=\"auth-link\">Forgot password?</a>\n                    </div>\n                    <!-- <div class=\"mb-2\">\n                        <button type=\"button\" class=\"btn btn-block btn-facebook auth-form-btn\">\n                            <i class=\"mdi mdi-facebook mr-2\"></i>Connect using facebook\n                        </button>\n                    </div> -->\n                    <!-- <div class=\"text-center mt-4 font-weight-light\">\n                        Don't have an account? <a routerLink=\"/register\" class=\"text-primary\">Create</a>\n                    </div> -->\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { Configuration } from '../configuration/config';\nimport { CommonService } from '../services/common.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  FormError:string;\n  loginForm: FormGroup;\n  errorMessage: string;\n  placeholder: string;\n  hashedPassword: any;\n\n\n  constructor(private api: ApiService, public Router: Router, private secert: Configuration, private commonFunction: CommonService) { }\n\n  ngOnInit() {\n    this.buildLoginForm();\n  }\n\n\n  buildLoginForm(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('', [\n        Validators.required,\n        Validators.pattern(/\\S+@\\S+\\.\\S+/),\n      ]),\n      'password': new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n\n  login() {\n    this.hashedPassword = this.commonFunction.HmacSHA256(this.loginForm.value.password);\n\n    const loginObj = {\n      'email': this.loginForm.value.email,\n      'password': this.hashedPassword,\n    };\n    this.api.loginApi(loginObj).subscribe((data: any) => {\n      if (data.responseCode === 200) {\n        localStorage.setItem('token', data.result.Auth_token);\n        localStorage.setItem('username', data.result.userDetails.username);\n        this.Router.navigate(['/dashboard']);\n      }else{\n        this.FormError= data.error;\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Configuration } from '../configuration/config';\n\n@Injectable()\nexport class ApiService {\n\n    constructor(\n        public httpClient: HttpClient,\n        public urlObject: Configuration,\n    ) { }\n\n    /**\n    * @method loginApi()\n    * @desc check if user is authenticated or not\n    */\n\n    loginApi(loginInfoObj) {\n        return this.httpClient.post(this.urlObject.UrlObj.loginApi, loginInfoObj);\n    }\n\n}","import { isPlatformBrowser } from '@angular/common';\nimport { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as CryptoJS from 'crypto-js';\nimport { Configuration } from '../configuration/config';\n\n@Injectable()\nexport class CommonService {\n\n    constructor(@Inject(PLATFORM_ID) private platformId: Object,\n        public httpClient: HttpClient,\n        private secert: Configuration\n    ) { }\n\n    /**\n    * @method isUserLoggedIn()\n    * @desc check if user is logged in i.e token is present in Local Storage or not\n    */\n\n    isUserLoggedIn() {\n\n        if (this.getItem('token') == null) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n    * @method getItem()\n    * @desc get item from Local Storage\n    */\n\n    getItem(key) {\n\n        if (isPlatformBrowser(this.platformId)) {\n            return localStorage.getItem(key);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n    * @method HmacSHA256()\n    * @desc get item from Local Storage\n    */\n\n    HmacSHA256(data) {\n        return CryptoJS.HmacSHA256(data, this.secert.Hmac256Secret).toString(CryptoJS.enc.Hex);\n\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// Angular\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\nimport { NavigationEnd, Router } from '@angular/router';\n// RxJS\nimport { Subscription } from 'rxjs';\n\n/**\n * Page load animation\n *\n */\n@Directive({\n\tselector: '[contentAnimate]'\n})\nexport class ContentAnimateDirective implements OnInit, OnDestroy {\n\t// Public properties\n\tplayer: AnimationPlayer;\n\t// Private properties\n\tprivate events: Subscription;\n\n\t/**\n\t * Directive Consturctor\n\t * @param el: ElementRef\n\t * @param router: Router\n\t * @param animationBuilder: AnimationBuilder\n\t */\n\tconstructor(\n\t\tprivate el: ElementRef,\n\t\tprivate router: Router,\n\t\tprivate animationBuilder: AnimationBuilder) {\n\t}\n\n\t/**\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\n\t */\n\n\t/**\n\t * On init\n\t */\n\tngOnInit(): void {\n\t\t// animate the content\n\t\tthis.initAnimate();\n\t\t// animate page load\n\t\tthis.events = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof NavigationEnd) {\n\t\t\t\tthis.player.play();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * On destroy\n\t */\n\tngOnDestroy(): void {\n\t\tthis.events.unsubscribe();\n\t\tthis.player.destroy();\n\t}\n\n\t/**\n\t * Animate page load\n\t */\n\tinitAnimate() {\n\t\tthis.player = this.animationBuilder\n\t\t\t.build([\n\t\t\t\t// style({opacity: 0, transform: 'translateY(15px)'}),\n\t\t\t\t// animate(500, style({opacity: 1, transform: 'translateY(0)'})),\n\t\t\t\t// style({transform: 'none'}),\n\t\t\t\tstyle({\n\t\t\t\t\ttransform: 'translateY(-1%)',\n\t\t\t\t\topacity: 0,\n          position: 'static',\n          height: '100%'\n\t\t\t\t}),\n\t\t\t\tanimate(\n\t\t\t\t\t'0.5s ease-in-out',\n\t\t\t\t\tstyle({transform: 'translateY(0%)', opacity: 1})\n\t\t\t\t)\n\t\t\t])\n\t\t\t.create(this.el.nativeElement);\n\t}\n}\n","<footer class=\"footer\">\n  <div class=\"d-sm-flex justify-content-center justify-content-sm-between\">\n    <span class=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2017 <a href=\"https://www.bootstrapdash.com/\" target=\"_blank\"></a>. All rights reserved.</span>\n    <!-- <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i></span> -->\n  </div>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n  <div class=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\n    <a class=\"navbar-brand brand-logo\" routerLink=\"/dashboard\">\n      <!-- <img src=\"assets/images/logo.svg\" alt=\"logo\" /> -->\n      <h3><b>IDMS</b></h3>\n    </a>\n    <a class=\"navbar-brand brand-logo-mini\" routerLink=\"/\"><img src=\"assets/images/logo-mini.svg\" alt=\"logo\" /></a>\n  </div>\n  <div class=\"navbar-menu-wrapper d-flex align-items-stretch\">\n    <!-- <button class=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\" (click)=\"toggleSidebar()\">\n      <span class=\"mdi mdi-menu\"></span>\n    </button>\n    <div class=\"search-field d-none d-md-block\">\n      <form class=\"d-flex align-items-center h-100\" action=\"#\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend bg-transparent\">\n            <i class=\"input-group-text border-0 mdi mdi-magnify\"></i>\n          </div>\n          <input type=\"text\" class=\"form-control bg-transparent border-0\" placeholder=\"Search projects\">\n        </div>\n      </form>\n    </div> -->\n    <ul class=\"navbar-nav navbar-nav-right\">\n      <li class=\"nav-item nav-profile dropdown\" ngbDropdown>\n        <a class=\"nav-link dropdown-toggle\" id=\"profileDropdown\" ngbDropdownToggle>\n          <!-- <div class=\"nav-profile-img\">\n            <img src=\"assets/images/faces/face1.jpg\" alt=\"image\">\n            <span class=\"availability-status online\"></span>\n          </div> -->\n          <div class=\"nav-profile-text\">\n            <p class=\"mb-1 text-black\">{{username}}</p>\n          </div>\n        </a>\n        <div class=\"dropdown-menu navbar-dropdown\" ngbDropdownMenu aria-labelledby=\"profileDropdown\">\n          <!-- <a class=\"dropdown-item\" href=\"javascript:;\">\n            <i class=\"mdi mdi-cached mr-2 text-success\"></i>\n            Activity Log\n          </a> -->\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" (click)=\"logout()\">\n            <i class=\"mdi mdi-logout mr-2 text-primary\" ></i>\n            Signout\n          </a>\n        </div>\n      </li>\n      <!-- <li class=\"nav-item dropdown\" ngbDropdown>\n        <a class=\"nav-link count-indicator dropdown-toggle\" id=\"messageDropdown\" ngbDropdownToggle>\n          <i class=\"mdi mdi-email-outline\"></i>\n          <span class=\"count-symbol bg-warning\"></span>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\" ngbDropdownMenu aria-labelledby=\"messageDropdown\">\n          <h6 class=\"p-3 mb-0\">Messages</h6>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n             <div class=\"preview-thumbnail\">\n              <img src=\"assets/images/faces/face4.jpg\" alt=\"image\" class=\"profile-pic\">\n            </div> -->\n            <!-- <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject ellipsis mb-1 font-weight-normal\">Mark send you a message</h6>\n              <p class=\"text-gray mb-0\">\n                1 Minutes ago\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n            <div class=\"preview-thumbnail\">\n              <img src=\"assets/images/faces/face2.jpg\" alt=\"image\" class=\"profile-pic\">\n            </div>\n            <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject ellipsis mb-1 font-weight-normal\">Cregh send you a message</h6>\n              <p class=\"text-gray mb-0\">\n                15 Minutes ago\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n            <div class=\"preview-thumbnail\">\n              <img src=\"assets/images/faces/face3.jpg\" alt=\"image\" class=\"profile-pic\">\n            </div>\n            <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject ellipsis mb-1 font-weight-normal\">Profile picture updated</h6>\n              <p class=\"text-gray mb-0\">\n                18 Minutes ago\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <h6 class=\"p-3 mb-0 text-center\">4 new messages</h6>\n        </div>\n      </li> -->\n      <!-- <li class=\"nav-item dropdown\" ngbDropdown>\n        <a class=\"nav-link count-indicator dropdown-toggle\" id=\"notificationDropdown\" ngbDropdownToggle>\n          <i class=\"mdi mdi-bell-outline\"></i>\n          <span class=\"count-symbol bg-danger\"></span>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\" ngbDropdownMenu aria-labelledby=\"notificationDropdown\">\n          <h6 class=\"p-3 mb-0\">Notifications</h6>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n            <div class=\"preview-thumbnail\">\n              <div class=\"preview-icon bg-success\">\n                <i class=\"mdi mdi-calendar\"></i>\n              </div>\n            </div>\n            <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject font-weight-normal mb-1\">Event today</h6>\n              <p class=\"text-gray ellipsis mb-0\">\n                Just a reminder that you have an event today\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n            <div class=\"preview-thumbnail\">\n              <div class=\"preview-icon bg-warning\">\n                <i class=\"mdi mdi-settings\"></i>\n              </div>\n            </div>\n            <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject font-weight-normal mb-1\">Settings</h6>\n              <p class=\"text-gray ellipsis mb-0\">\n                Update dashboard\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item preview-item\">\n            <div class=\"preview-thumbnail\">\n              <div class=\"preview-icon bg-info\">\n                <i class=\"mdi mdi-link-variant\"></i>\n              </div>\n            </div>\n            <div class=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\n              <h6 class=\"preview-subject font-weight-normal mb-1\">Launch Admin</h6>\n              <p class=\"text-gray ellipsis mb-0\">\n                New admin wow!\n              </p>\n            </div>\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <h6 class=\"p-3 mb-0 text-center\">See all notifications</h6>\n        </div>\n      </li> -->\n      <!-- <li class=\"nav-item nav-logout d-none d-lg-block\">\n        <a class=\"nav-link\" (click)=\"logout()\">\n          <i class=\"mdi mdi-power\"></i>\n        </a>\n      </li> -->\n      <!-- <li class=\"nav-item nav-settings d-none d-lg-block\" (click)=\"toggleRightSidebar()\">\n        <a class=\"nav-link\">\n          <i class=\"mdi mdi-format-line-spacing\"></i>\n        </a>\n      </li> -->\n    </ul>\n    <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" (click)=\"toggleOffcanvas()\">\n      <span class=\"mdi mdi-menu\"></span>\n    </button>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  providers: [NgbDropdownConfig]\n})\nexport class NavbarComponent implements OnInit {\n  public iconOnlyToggled = false;\n  public sidebarToggled = false;\n  username : string;\n  \n  constructor(config: NgbDropdownConfig,private Router:Router) {\n    config.placement = 'bottom-right';\n  }\n\n  ngOnInit() {\n    this.username = localStorage.getItem('username')?localStorage.getItem('username'):'user';\n  }\n\n  //logout\n  logout(){\n    localStorage.clear();\n    this.Router.navigate(['/login']);\n  }\n\n  // toggle sidebar in small devices\n  toggleOffcanvas() {\n    document.querySelector('.sidebar-offcanvas').classList.toggle('active');\n  }\n\n  // toggle sidebar\n  toggleSidebar() {\n    let body = document.querySelector('body');\n    if((!body.classList.contains('sidebar-toggle-display')) && (!body.classList.contains('sidebar-absolute'))) {\n      this.iconOnlyToggled = !this.iconOnlyToggled;\n      if(this.iconOnlyToggled) {\n        body.classList.add('sidebar-icon-only');\n      } else {\n        body.classList.remove('sidebar-icon-only');\n      }\n    } else {\n      this.sidebarToggled = !this.sidebarToggled;\n      if(this.sidebarToggled) {\n        body.classList.add('sidebar-hidden');\n      } else {\n        body.classList.remove('sidebar-hidden');\n      }\n    }\n  }\n\n  // toggle right sidebar\n  toggleRightSidebar() {\n    document.querySelector('#right-sidebar').classList.toggle('open');\n  }\n\n}\n","<nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n  <ul class=\"nav\">\n    <li class=\"nav-item nav-profile\">\n      <a href=\"javascript:;\" class=\"nav-link\">\n        <!-- <div class=\"nav-profile-image\">\n          <img src=\"assets/images/faces/face1.jpg\" alt=\"profile\">\n          <span class=\"login-status online\"></span> \n        </div> -->\n        <div class=\"nav-profile-text\">\n          <span class=\"font-weight-bold mb-2\">{{username}}</span>\n          <!-- <span class=\"text-secondary text-small\">Project Manager</span> -->\n        </div>\n        <i class=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\n      </a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active': dashboard.isActive }\">\n      <a class=\"nav-link\" routerLink=\"/dashboard\" routerLinkActive #dashboard=\"routerLinkActive\">\n        <span class=\"menu-title\">Dashboard</span>\n        <i class=\"mdi mdi-home menu-icon\"></i>\n      </a>\n    </li>\n    <!-- <li class=\"nav-item\" [ngClass]=\"{'active' : accordions.isActive || buttons.isActive || badges.isActive || breadcrumbs.isActive || dropdowns.isActive || modals.isActive || notifications.isActive || progressbar.isActive || pagination.isActive || tabs.isActive || typography.isActive || tooltips.isActive }\">\n      <a class=\"nav-link\" (click)=\"uiBasicCollapsed = !uiBasicCollapsed\" [attr.aria-expanded]=\"uiBasicCollapsed\" aria-controls=\"ui-basic\">\n        <span class=\"menu-title\">Basic UI Elements</span>\n        <i class=\"menu-arrow\"></i>\n        <i class=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n      </a>\n      <div class=\"collapse\" id=\"ui-basic\" [ngbCollapse]=\"!uiBasicCollapsed\">\n        <ul class=\"nav flex-column sub-menu\">\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/accordions\" routerLinkActive=\"active\" #accordions=\"routerLinkActive\">Accordions</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/buttons\" routerLinkActive=\"active\" #buttons=\"routerLinkActive\">Buttons</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/badges\" routerLinkActive=\"active\" #badges=\"routerLinkActive\">Badges</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/breadcrumbs\" routerLinkActive=\"active\" #breadcrumbs=\"routerLinkActive\">Breadcrumbs</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/dropdowns\" routerLinkActive=\"active\" #dropdowns=\"routerLinkActive\">Dropdowns</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/modals\" routerLinkActive=\"active\" #modals=\"routerLinkActive\">Modals</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/notifications\" routerLinkActive=\"active\" #notifications=\"routerLinkActive\">Notifications</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/progressbar\" routerLinkActive=\"active\" #progressbar=\"routerLinkActive\">Progress bar</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/pagination\" routerLinkActive=\"active\" #pagination=\"routerLinkActive\">Pagination</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/tabs\" routerLinkActive=\"active\" #tabs=\"routerLinkActive\">Tabs</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/typography\" routerLinkActive=\"active\" #typography=\"routerLinkActive\">Typography</a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"basic-ui/tooltips\" routerLinkActive=\"active\" #tooltips=\"routerLinkActive\">Tooltips</a></li>\n        </ul>\n      </div>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active': forms.isActive }\">\n      <a class=\"nav-link\" routerLink=\"forms/basic-elements\" routerLinkActive #forms=\"routerLinkActive\">\n        <span class=\"menu-title\">Form elements</span>\n        <i class=\"mdi mdi-format-list-bulleted menu-icon\"></i>\n      </a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active': charts.isActive }\">\n      <a class=\"nav-link\" routerLink=\"charts/chartjs\" routerLinkActive #charts=\"routerLinkActive\">\n        <span class=\"menu-title\">Charts</span>\n        <i class=\"mdi mdi-chart-bar menu-icon\"></i>\n      </a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active': tables.isActive }\">\n      <a class=\"nav-link\" routerLink=\"tables/basic-table\" routerLinkActive #tables=\"routerLinkActive\">\n        <span class=\"menu-title\">Tables</span>\n        <i class=\"mdi mdi-table-large menu-icon\"></i>\n      </a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active': icons.isActive }\">\n      <a class=\"nav-link\" routerLink=\"icons/mdi\" routerLinkActive #icons=\"routerLinkActive\">\n        <span class=\"menu-title\">Icons</span>\n        <i class=\"mdi mdi-contacts menu-icon\"></i>\n      </a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{ 'active' : blankPage.isActive || login.isActive || register.isActive || error404.isActive || error500.isActive }\">\n      <a class=\"nav-link\" (click)=\"samplePagesCollapsed = !samplePagesCollapsed\"  [attr.aria-expanded]=\"samplePagesCollapsed\" aria-controls=\"auth\">\n        <span class=\"menu-title\">Sample Pages</span>\n        <i class=\"menu-arrow\"></i>\n        <i class=\"mdi mdi-medical-bag menu-icon\"></i>\n      </a>\n      <div class=\"collapse\" id=\"auth\" [ngbCollapse]=\"!samplePagesCollapsed\">\n        <ul class=\"nav flex-column sub-menu\">\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"general-pages/blank-page\" routerLinkActive=\"active\" #blankPage=\"routerLinkActive\"> Blank Page </a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"user-pages/login\" routerLinkActive=\"active\" #login=\"routerLinkActive\"> Login </a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"user-pages/register\" routerLinkActive=\"active\" #register=\"routerLinkActive\"> Register </a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"error-pages/404\" routerLinkActive=\"active\" #error404=\"routerLinkActive\"> 404 </a></li>\n          <li class=\"nav-item\"> <a class=\"nav-link\" routerLink=\"error-pages/500\" routerLinkActive=\"active\" #error500=\"routerLinkActive\"> 500 </a></li>\n        </ul>\n      </div> -->\n    <!-- </li> -->\n  </ul>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  public uiBasicCollapsed = false;\n  public samplePagesCollapsed = false;\n  username:string;\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.username = localStorage.getItem('username')?localStorage.getItem('username'):'user';\n    const body = document.querySelector('body');\n\n    // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    document.querySelectorAll('.sidebar .nav-item').forEach(function (el) {\n      el.addEventListener('mouseover', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n","<div class=\"spinner-wrapper\">\n  <div class=\"donut\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}